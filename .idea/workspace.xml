<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="abdfdd84-1712-4f3b-aafd-f61130ad3f75" name="변경" comment="문자거리 ( 주석확인 )">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Let4lVnZZ0OZGU6JKnMhqHmNkG" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/20220509_lab/algo3/javaAlgo&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Main" />
      <module name="javaAlgo" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="애플리케이션.Main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="애플리케이션 수준" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="디폴트 작업">
      <changelist id="abdfdd84-1712-4f3b-aafd-f61130ad3f75" name="변경" comment="" />
      <created>1676243190024</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1676243190024</updated>
      <workItem from="1676243191413" duration="10624000" />
      <workItem from="1676415620811" duration="5460000" />
      <workItem from="1677803165892" duration="2817000" />
      <workItem from="1677990393479" duration="8532000" />
      <workItem from="1678099516691" duration="2808000" />
    </task>
    <task id="LOCAL-00001" summary="test commit : git commit 연계 &#10;next algo sol : 문자열 찾기">
      <created>1676246142406</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1676246142406</updated>
    </task>
    <task id="LOCAL-00002" summary="문자열 찾기">
      <created>1676247961919</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1676247961919</updated>
    </task>
    <task id="LOCAL-00003" summary="문자열 찾기 : 3번 부터는 신규 클래스 생성">
      <created>1676332437129</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1676332437129</updated>
    </task>
    <task id="LOCAL-00004" summary="문자열 찾기 : 3번 부터는 신규 클래스 생성 , 아스키 코드 활용">
      <created>1676332642403</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1676332642403</updated>
    </task>
    <task id="LOCAL-00005" summary="3번 가장 긴 단어 출력하기 1. split을 통한 방법 . 2. indexof와 substring으로 출력하기">
      <created>1676423090682</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1676423090682</updated>
    </task>
    <task id="LOCAL-00006" summary="앞에서 읽을 때나 뒤에서 읽을 때나 같은 문자열을 회문 문자열이라고 합니다.&#10;&#10;문자열이 입력되면 해당 문자열이 회문 문자열이면 &quot;YES&quot;, 회문 문자열이 아니면 “NO&quot;를 출력하는 프로그램을 작성하세요.&#10;&#10;단 회문을 검사할 때 대소문자를 구분하지 않습니다.">
      <created>1677804044025</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1677804044025</updated>
    </task>
    <task id="LOCAL-00007" summary="3번 가장 긴 단어 출력하기 1. split을 통한 방법 . 2. indexof와 substring으로 출력하기">
      <created>1677850673590</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1677850673590</updated>
    </task>
    <task id="LOCAL-00008" summary="펠린드 롬과 숫자 정규식 표현하기 ( replaceALL )">
      <created>1677856547586</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1677856547586</updated>
    </task>
    <task id="LOCAL-00009" summary="문자거리 ( 주석확인 )">
      <created>1678000073167</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1678000073167</updated>
    </task>
    <option name="localTasksCounter" value="10" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="test commit : git commit 연계 &#10;next algo sol : 문자열 찾기" />
    <MESSAGE value="문자열 찾기" />
    <MESSAGE value="문자열 찾기 : 3번 부터는 신규 클래스 생성" />
    <MESSAGE value="문자열 찾기 : 3번 부터는 신규 클래스 생성 , 아스키 코드 활용" />
    <MESSAGE value="앞에서 읽을 때나 뒤에서 읽을 때나 같은 문자열을 회문 문자열이라고 합니다.&#10;&#10;문자열이 입력되면 해당 문자열이 회문 문자열이면 &quot;YES&quot;, 회문 문자열이 아니면 “NO&quot;를 출력하는 프로그램을 작성하세요.&#10;&#10;단 회문을 검사할 때 대소문자를 구분하지 않습니다." />
    <MESSAGE value="3번 가장 긴 단어 출력하기 1. split을 통한 방법 . 2. indexof와 substring으로 출력하기" />
    <MESSAGE value="펠린드 롬과 숫자 정규식 표현하기 ( replaceALL )" />
    <MESSAGE value="문자거리 ( 주석확인 )" />
    <option name="LAST_COMMIT_MESSAGE" value="문자거리 ( 주석확인 )" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>